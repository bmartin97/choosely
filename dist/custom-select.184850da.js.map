{"version":3,"sources":["custom-select.js"],"names":["createElementFromHTML","htmlString","div","document","createElement","innerHTML","trim","firstChild","createAttributesFromObject","attrObject","Object","values","map","value","nodeName","nodeValue","join","createAttributesFromAttributeList","attrArray","includes","Choosely","selector","undefined","target","searchable","inheritAttributes","on","Init","Open","Close","Select","onInit","console","warn","onOpen","onClose","onSelect","state","_selected","Selected","new_selected","_options","Options","new_options","_filteredOptions","FilteredOptions","FilteredOption","_isOpened","IsOpened","_sourceElement","querySelector","sourceElement","Error","_targetElement","targetElement","parentElement","options","querySelectorAll","renderOptions","Array","isArray","from","_option","text","innerText","_clone","cloneNode","classList","add","attributes","html","_element","appendChild","chooselyElement","optionElements","addEventListener","forEach","window","evt","contains","searchElement","event","keyword","remove","err","error","option","selector1","log"],"mappings":"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","file":"custom-select.184850da.js","sourceRoot":"..","sourcesContent":["function createElementFromHTML(htmlString) {\r\n    var div = document.createElement('div');\r\n    div.innerHTML = htmlString.trim();\r\n\r\n    // Change this to div.childNodes to support multiple top-level nodes\r\n    return div.firstChild;\r\n}\r\n\r\nfunction createAttributesFromObject(attrObject) {\r\n    return Object.values(attrObject)\r\n        .map((value) => `${value.nodeName}=\"${value.nodeValue}\"`)\r\n        .join(' ');\r\n}\r\n\r\nfunction createAttributesFromAttributeList(attrObject, attrArray) {\r\n    return Object.values(attrObject)\r\n        .map((value) => {\r\n            if (attrArray.includes(value.nodeName)) {\r\n                return `${value.nodeName}=\"${value.nodeValue}\"`;\r\n            }\r\n        })\r\n        .join(' ');\r\n}\r\n\r\nclass Choosely {\r\n    constructor({\r\n        selector = undefined,\r\n        target = undefined,\r\n        searchable = false,\r\n        inheritAttributes = false,\r\n        on = {\r\n            Init,\r\n            Open,\r\n            Close,\r\n            Select\r\n        }\r\n    }) {\r\n        if (on.Init) {\r\n            if (typeof on.Init === 'function') {\r\n                this.onInit = on.Init;\r\n            } else {\r\n                console.warn(`on Init property is not a function!`);\r\n                this.onInit = function () {};\r\n            }\r\n        } else {\r\n            this.onInit = function () {};\r\n        }\r\n\r\n        if (on.Open) {\r\n            if (typeof on.Open === 'function') {\r\n                this.onOpen = on.Open;\r\n            } else {\r\n                console.warn(`on Open property is not a function!`);\r\n                this.onOpen = function () {};\r\n            }\r\n        } else {\r\n            this.onOpen = function () {};\r\n        }\r\n        if (on.Close) {\r\n            if (typeof on.Close === 'function') {\r\n                this.onClose = on.Close;\r\n            } else {\r\n                console.warn(`on Close property is not a function!`);\r\n                this.onClose = function () {};\r\n            }\r\n        } else {\r\n            this.onClose = function () {};\r\n        }\r\n        if (on.Select) {\r\n            if (typeof on.Select === 'function') {\r\n                this.onSelect = on.Select;\r\n            } else {\r\n                console.warn(`on Select property is not a function!`);\r\n                this.onSelect = function () {};\r\n            }\r\n        } else {\r\n            this.onSelect = function () {};\r\n        }\r\n\r\n        this.state = {\r\n            _selected: null,\r\n            set Selected(new_selected) {\r\n                this._selected = new_selected;\r\n            },\r\n            get Selected() {\r\n                return this._selected;\r\n            },\r\n            _options: [],\r\n            set Options(new_options) {\r\n                this._options = new_options;\r\n            },\r\n            get Options() {\r\n                return this._options;\r\n            },\r\n            _filteredOptions: [],\r\n            set FilteredOptions(value) {\r\n                this._filteredOptions = value;\r\n            },\r\n            get FilteredOption() {\r\n                return this._filteredOptions;\r\n            },\r\n            _isOpened: false,\r\n            set IsOpened(value) {\r\n                this._isOpened = value;\r\n            },\r\n            get IsOpened() {\r\n                return this._isOpened;\r\n            }\r\n        };\r\n\r\n        try {\r\n            const _sourceElement = document.querySelector(selector);\r\n            if (_sourceElement) {\r\n                this.sourceElement = _sourceElement;\r\n            } else {\r\n                throw new Error(`Source element doesn't exist. Selector: ${selector}`);\r\n            }\r\n\r\n            // Select target HTML Element\r\n            if (target) {\r\n                const _targetElement = document.querySelector(target);\r\n                if (_targetElement) {\r\n                    this.targetElement = _targetElement;\r\n                } else {\r\n                    throw new Error(`Target element doesn't exist. Selector: ${target}`);\r\n                }\r\n            } else {\r\n                const _targetElement = this.sourceElement.parentElement;\r\n                if (_targetElement) {\r\n                    this.targetElement = _targetElement;\r\n                } else {\r\n                    throw new Error(\r\n                        `Source element doesn't have parent elements. Please define target element.`\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Render choosely\r\n            const options = this.sourceElement.querySelectorAll('option');\r\n\r\n            const renderOptions = () => {\r\n                if (inheritAttributes) {\r\n                    if (\r\n                        typeof inheritAttributes === 'object' &&\r\n                        Array.isArray(inheritAttributes)\r\n                    ) {\r\n                        // Array\r\n                        return Array.from(options).map((_option) => {\r\n                            const text = _option.innerText;\r\n\r\n                            const _clone = _option.cloneNode();\r\n                            _clone.classList.add('choosely-option');\r\n                            const attributes = _clone.attributes;\r\n\r\n                            return `<div ${createAttributesFromAttributeList(\r\n                                attributes,\r\n                                inheritAttributes\r\n                            )} ${\r\n                                !inheritAttributes.includes('class')\r\n                                    ? 'class=\"choosely-option\"'\r\n                                    : ''\r\n                            }>${text}</div>`;\r\n                        });\r\n                    } else if (typeof inheritAttributes === 'boolean') {\r\n                        // True\r\n                        return Array.from(options).map((_option) => {\r\n                            const text = _option.innerText;\r\n\r\n                            const _clone = _option.cloneNode();\r\n                            _clone.classList.add('choosely-option');\r\n                            const attributes = _clone.attributes;\r\n\r\n                            return `<div ${createAttributesFromObject(\r\n                                attributes\r\n                            )} >${text}</div>`;\r\n                        });\r\n                    } else {\r\n                        // Invalid type\r\n                        throw new Error(`Invalid type for inheritAttributes property.`);\r\n                    }\r\n                } else {\r\n                    // False\r\n                    return Array.from(options).map((_option) => {\r\n                        const text = _option.innerText;\r\n\r\n                        return `<div class=\"choosely-option'>${text}</div>`;\r\n                    });\r\n                }\r\n            };\r\n\r\n            const html = `\r\n                <div class=\"choosely-select\">\r\n                    <div class=\"choosely-selected\">\r\n                        ${options[0].innerText}\r\n                    </div>\r\n                    <div class=\"choosely-option-container\">\r\n                        ${\r\n                            searchable\r\n                                ? `\r\n                            <div class=\"choosely-search\">\r\n                                <input type=\"search\" autocomplete=\"off\">\r\n                            </div>`\r\n                                : ``\r\n                        }\r\n                        ${renderOptions().join('')}\r\n                    </div>\r\n                </div >\r\n                `;\r\n            const _element = createElementFromHTML(html);\r\n            this.targetElement.appendChild(_element);\r\n\r\n            this.chooselyElement = _element;\r\n            this.state.Selected = _element.querySelector('.choosely-selected');\r\n            this.state.Options = _element.querySelectorAll('.choosely-option');\r\n\r\n            const optionElements = this.chooselyElement.querySelectorAll(\r\n                '.choosely-option'\r\n            );\r\n            this.state.Selected.addEventListener('click', () => {\r\n                if (this.IsOpened) {\r\n                    this.Close();\r\n                } else {\r\n                    this.Open();\r\n                }\r\n            });\r\n            optionElements.forEach((_option) => {\r\n                _option.addEventListener('click', () => {\r\n                    this.Select(_option);\r\n                    this.Close();\r\n                });\r\n            });\r\n            window.addEventListener('click', (evt) => {\r\n                if (this.IsOpened && !this.chooselyElement.contains(evt.target)) {\r\n                    this.Close();\r\n                }\r\n            });\r\n            if (searchable) {\r\n                const searchElement = this.chooselyElement.querySelector(\r\n                    '.choosely-search > input'\r\n                );\r\n                searchElement.addEventListener('input', (event) => {\r\n                    const keyword = event.target.value;\r\n                    this.state.Options.forEach((_option) => {\r\n                        if (!_option.innerText.includes(keyword)) {\r\n                            _option.classList.add('hidden');\r\n                        } else {\r\n                            _option.classList.remove('hidden');\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            return this;\r\n        } catch (err) {\r\n            console.error(err, 'Choosely.js');\r\n        } finally {\r\n            this.onInit();\r\n        }\r\n    }\r\n    /**\r\n     * @param {HTMLElement} option\r\n     */\r\n    Select(option) {\r\n        this.state.Selected.innerText = option.innerText;\r\n        this.onSelect();\r\n    }\r\n    Open() {\r\n        this.chooselyElement.classList.add('c-opened');\r\n        this.IsOpened = true;\r\n        this.onOpen();\r\n    }\r\n    Close() {\r\n        this.chooselyElement.classList.remove('c-opened');\r\n        this.IsOpened = false;\r\n        this.onClose();\r\n    }\r\n}\r\n\r\nconst selector1 = new Choosely({\r\n    selector: 'form .form-item.form-type-select select',\r\n    searchable: true,\r\n    inheritAttributes: ['value', 'style'], // default false,\r\n    on: {\r\n        Init() {\r\n            console.log('Init.');\r\n        },\r\n        Open() {\r\n            console.log('Open.');\r\n        },\r\n        Close() {\r\n            console.log('Close.');\r\n        },\r\n        Select() {\r\n            console.log('Select.');\r\n        }\r\n    }\r\n});\r\n\r\nconsole.log(selector1);\r\n"]}