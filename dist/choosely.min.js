module.exports=function(e){var t={};function o(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,o),s.l=!0,s.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)o.d(n,s,function(t){return e[t]}.bind(null,s));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t),o.d(t,"default",(function(){return n}));class n{constructor({selector:e,target:t,searchable:o=!1,inheritAttributes:n=!1,enableArrowNavigation:s=!0,on:i={}}){i.Init?"function"==typeof i.Init?this.onInit=i.Init:(console.warn("on Init property is not a function!"),this.onInit=function(){}):this.onInit=function(){},i.Open?"function"==typeof i.Open?this.onOpen=i.Open:(console.warn("on Open property is not a function!"),this.onOpen=function(){}):this.onOpen=function(){},i.Close?"function"==typeof i.Close?this.onClose=i.Close:(console.warn("on Close property is not a function!"),this.onClose=function(){}):this.onClose=function(){},i.Select?"function"==typeof i.Select?this.onSelect=i.Select:(console.warn("on Select property is not a function!"),this.onSelect=function(){}):this.onSelect=function(){},this.state={_selected:null,set Selected(e){this._selected=e},get Selected(){return this._selected},_options:[],set Options(e){this._options=e},get Options(){return this._options},_filteredOptions:[],set FilteredOptions(e){this._filteredOptions=e,console.log("work",this),this.RefreshOptions()},get FilteredOptions(){return this._filteredOptions},_isOpened:!1,set IsOpened(e){this._isOpened=e},get IsOpened(){return this._isOpened}},Object.defineProperty(this.state,"FilteredOptions",{set:function(e){this.state._filteredOptions=e,this.RefreshOptions()}.bind(this)});try{const i=document.querySelector(e);if(!i)throw new Error("Source element doesn't exist. Selector: "+e);if(this.sourceElement=i,t){const e=document.querySelector(t);if(!e)throw new Error("Target element doesn't exist. Selector: "+t);this.targetElement=e}else{const e=this.sourceElement.parentElement;if(!e)throw new Error("Source element doesn't have parent elements. Please define target element.");this.targetElement=e}const c=this.sourceElement.querySelectorAll("option"),a=()=>{if(n){if("object"==typeof n&&Array.isArray(n))return Array.from(c).map(e=>{const t=e.innerText,o=e.cloneNode();o.classList.add("choosely-option");const s=o.attributes;return`<div ${i=s,r=n,Object.values(i).map(e=>{if(r.includes(e.nodeName))return`${e.nodeName}="${e.nodeValue}"`}).join(" ")} ${n.includes("class")?"":'class="choosely-option"'}>${t}</div>`;var i,r});if("boolean"==typeof n)return Array.from(c).map(e=>{const t=e.innerText,o=e.cloneNode();o.classList.add("choosely-option");const n=o.attributes;return`<div ${s=n,Object.values(s).map(e=>`${e.nodeName}="${e.nodeValue}"`).join(" ")} >${t}</div>`;var s});throw new Error("Invalid type for inheritAttributes property.")}return Array.from(c).map(e=>`<div class="choosely-option">${e.innerText}</div>`)},d=`\n                <div class="choosely-select">\n                    <div class="choosely-selected">\n                        ${c[0].innerText}\n                    </div>\n                    <div class="choosely-option-container">\n                        ${o?'\n                            <div class="choosely-search">\n                                <input type="search" autocomplete="off">\n                            </div>':""}\n                        <div class="choosely-options">\n                            ${a().join("")}\n                        </div>\n                    </div>\n                </div >\n                `,h=(r=d,(l=document.createElement("div")).innerHTML=r.trim(),l.firstChild);if(this.targetElement.appendChild(h),this.chooselyElement=h,this.state.Selected=h.querySelector(".choosely-selected"),this.state.Options=h.querySelectorAll(".choosely-option"),this.state.Options[0].classList.add("choosely-selected-option"),this.chooselyOptionsElement=h.querySelector(".choosely-option-container .choosely-options"),this.state.Selected.addEventListener("click",()=>{this.IsOpened?this.Close():this.Open()}),this.state.Options.forEach(e=>{e.addEventListener("click",()=>{this.Select(e),this.Close()})}),window.addEventListener("click",e=>{this.IsOpened&&!this.chooselyElement.contains(e.target)&&this.Close()}),this.state._filteredOptions=this.state.Options,o){this.chooselyElement.querySelector(".choosely-search > input").addEventListener("input",e=>{const t=e.target.value;this.state.FilteredOptions=Array.from(this.state.Options).filter(e=>e.innerText.toLowerCase().includes(t.toLowerCase()))})}return s&&document.addEventListener("keydown",e=>{if(this.IsOpened)if(40===e.which){const e=Array.from(this.state.FilteredOptions).findIndex(e=>e.classList.contains("choosely-selected-option"));0<=e&&e<this.state.FilteredOptions.length-1&&(this.state.FilteredOptions[e].classList.remove("choosely-selected-option"),this.state.FilteredOptions[e+1].classList.add("choosely-selected-option"),this.Select(this.state.FilteredOptions[e+1]))}else if(38===e.which){const e=Array.from(this.state.FilteredOptions).findIndex(e=>e.classList.contains("choosely-selected-option"));1<=e&&e<this.state.FilteredOptions.length&&(this.state.FilteredOptions[e].classList.remove("choosely-selected-option"),this.state.FilteredOptions[e-1].classList.add("choosely-selected-option"),this.Select(this.state.FilteredOptions[e-1]))}else 13===e.keyCode&&this.Close()}),this}catch(e){console.error(e,"Choosely.js")}finally{this.onInit()}var r,l}Select(e){this.state.Options.forEach(e=>e.classList.remove("choosely-selected-option")),e.classList.add("choosely-selected-option"),this.state.Selected.innerText=e.innerText,this.onSelect()}Open(){this.chooselyElement.classList.add("c-opened"),this.IsOpened=!0,this.onOpen()}Close(){this.chooselyElement.classList.remove("c-opened"),this.IsOpened=!1,this.onClose()}RefreshOptions(){const e=document.createElement("div");this.state.FilteredOptions.forEach(t=>e.appendChild(t)),this.chooselyOptionsElement.innerHTML="",this.state.FilteredOptions.forEach(e=>this.chooselyOptionsElement.appendChild(e))}}}]);